apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}
  namespace: {{ .Values.postgres.namespace }}
#  labels:
#    app: {{ .Values.postgres.name }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }}
    spec:
      initContainers:
      - name: init-cleanup
        image: busybox
        command: ['sh', '-c', 'rm -rf /var/lib/postgresql/data/*']
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      containers:
      - name: {{ .Values.postgres.name }}
        image: {{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}
        ports:
        - containerPort: {{ .Values.postgres.ports.container }}
        envFrom:
        - configMapRef:
            name: {{ .Values.postgres.name }}-config
        - secretRef:
            name: {{ .Values.postgres.name }}-secret
        volumeMounts:
        - name: {{ .Values.postgres.name }}-storage
          mountPath: /var/lib/postgresql/data
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: {{ .Values.postgres.name }}-storage
        persistentVolumeClaim:
          claimName: {{ .Values.postgres.name }}-pvc
      - name: init-script
        configMap:
          name: postgres-init-config
